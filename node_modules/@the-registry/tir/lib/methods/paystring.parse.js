"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parsePayStringUrl = exports.parsePayString = void 0;
var paystring_misc_1 = require("./paystring.misc");
function parsePayString(payString) {
    var _split = (0, paystring_misc_1.splitPayString)(payString);
    if (!_split)
        return;
    var user = _split.prefix, host = _split.domain;
    var urlSafePattern = /^[A-Za-z0-9\-._~:/?#[\]@!$&'()*+,;=]*$/;
    if (!urlSafePattern.test(user))
        return;
    // A PayString string representation cannot include paths
    if (user.includes('/') || host.includes('/'))
        return;
    parsePayStringUrl("https://".concat(host, "/").concat(user));
    return payString.toLowerCase();
}
exports.parsePayString = parsePayString;
function parsePayStringUrl(payStringUrl) {
    var url = new URL(payStringUrl);
    // Invalid URL protocol: "${url.protocol}". PayString URLs must be HTTP/HTTPS.
    if (url.protocol !== 'http:' && url.protocol !== 'https:')
        return;
    // Hostname "${url.hostname}" is not a valid hostname. Needs a dot-separated TLD
    if (!url.hostname.includes('.'))
        return;
    return url;
}
exports.parsePayStringUrl = parsePayStringUrl;
